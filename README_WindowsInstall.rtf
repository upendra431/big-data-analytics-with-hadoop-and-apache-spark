{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl300\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 When trying to get the HDP sandbox working on a Windows machine it requires binding to some ports that are automatically being reserved by Hyper-V and/or Docker for Windows (see this GitHub issue for more details https://github.com/docker/for-win/issues/3171). The solution for this is to disable Hyper-V, reserve the ports you need, then re-enable Hyper-V all of which will require a number of restarts. Here are the exact steps:\
\uc0\u8232 \
1. Open a PowerShell window as an administrator\
2. Enter the following command:\
dism.exe /Online /Disable-Feature:Microsoft-Hyper-V\
3. When asked to restart the machine type y and wait for the machine to restart\
4. Open a PowerShell window as an administrator\
5. Enter the following 5 commands to reserve the needed ports:\
netsh int ipv4 add excludedportrange protocol=tcp startport=50070 numberofports=1\
netsh int ipv4 add excludedportrange protocol=tcp startport=50075 numberofports=1\
netsh int ipv4 add excludedportrange protocol=tcp startport=50079 numberofports=1\
netsh int ipv4 add excludedportrange protocol=tcp startport=50095 numberofports=1\
netsh int ipv4 add excludedportrange protocol=tcp startport=50111 numberofports=1\
6. Enter the following command:\
dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All\
7. When asked to restart the machine type y and wait for the machine to restart\
\uc0\u8232 \
Now that you have performed these steps you can open a bash shell (such as GitBash) and running the sh docker-deploy-hdp30.sh command will complete properly. It also needs to be made clear that this command only works in a bash shell and it won't work in PowerShell.\
}